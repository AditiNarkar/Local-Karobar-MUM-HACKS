{"ast":null,"code":"var _jsxFileName = \"/Users/bigfatrat/Desktop/ADT/Local-Karobar/Local-Karobar-Final-1350/client-frontend/src/components/Search.jsx\",\n  _s = $RefreshSig$();\n//npm install react-bootstrap bootstrap\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Button from 'react-bootstrap/Button';\n// import ListGroup from 'react-bootstrap/ListGroup';\n// import Form from 'react-bootstrap/Form';\n// import InputGroup from 'react-bootstrap/InputGroup';\n\nimport React, { useState } from 'react';\nimport '../CSS/searchbyaddressMaps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LOCATION_XML = \"https://nominatim.openstreetmap.org/search?\";\nconst params = {\n  q: '',\n  format: 'json',\n  addressdetails: 'addressdetails'\n};\nexport const Search = ({\n  selectedPlace,\n  setSelectedPlace\n}) => {\n  _s();\n  //const [confirmAddress, setConfirmAddress] = useState()\n  const [searchText, setSearchText] = useState(\"\");\n  const [suggestedPlaces, setSuggestedPlaces] = useState([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maps-input-search-main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"maps-search-input\",\n          type: \"text\",\n          placeholder: \"Karobar's Address ...\",\n          value: searchText,\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn-maps\",\n          onClick: async e => {\n            e.preventDefault();\n            const params = {\n              q: searchText,\n              format: 'json',\n              addressdetails: 1,\n              polygon_geojson: 0\n            };\n            const queryStr = new URLSearchParams(params).toString();\n            const reqOptions = {\n              method: \"GET\",\n              redirect: \"follow\"\n            };\n            const fetchURL = LOCATION_XML + queryStr;\n            const response = await fetch(fetchURL, reqOptions);\n            const data = await response.text();\n            // console.log(JSON.parse(data))\n            setSuggestedPlaces(JSON.parse(data));\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"30px\"\n            },\n            src: \"/search_icon.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ul-searchbyaddress\",\n          children: suggestedPlaces.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  cursor: 'pointer'\n                },\n                onClick: () => {\n                  setSelectedPlace(item);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"./location_icon.png\",\n                  style: {\n                    width: \"20px\",\n                    marginRight: \"15px\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 29\n                }, this), item === null || item === void 0 ? void 0 : item.display_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"white\",\n                  margin: \"10px 5px 10px 5px\",\n                  width: \"100%\",\n                  height: \"1px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this)]\n            }, item === null || item === void 0 ? void 0 : item.place_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-submission\",\n          value: selectedPlace === null || selectedPlace === void 0 ? void 0 : selectedPlace.display_name,\n          placeholder: \"Your chosen address will appear here...\",\n          onChange: e => setSelectedPlace(e.target.value),\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button-address-maps\",\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: e => {\n            e.preventDefault();\n            if (selectedPlace) {\n              const address = selectedPlace.display_name;\n              //console.log(address)\n              localStorage.setItem('mapsAddress', address);\n              window.close();\n            } else {\n              window.alert(\"No address selected.\");\n            }\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Search, \"5Nvbas1w/EvBi3lepHCj7CP0evA=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LOCATION_XML","params","q","format","addressdetails","Search","selectedPlace","setSelectedPlace","_s","searchText","setSearchText","suggestedPlaces","setSuggestedPlaces","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","preventDefault","polygon_geojson","queryStr","URLSearchParams","toString","reqOptions","method","redirect","fetchURL","response","fetch","data","text","JSON","parse","style","width","src","map","item","cursor","marginRight","display_name","backgroundColor","margin","height","place_id","disabled","address","localStorage","setItem","window","close","alert","_c","$RefreshReg$"],"sources":["/Users/bigfatrat/Desktop/ADT/Local-Karobar/Local-Karobar-Final-1350/client-frontend/src/components/Search.jsx"],"sourcesContent":["//npm install react-bootstrap bootstrap\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import Button from 'react-bootstrap/Button';\n// import ListGroup from 'react-bootstrap/ListGroup';\n// import Form from 'react-bootstrap/Form';\n// import InputGroup from 'react-bootstrap/InputGroup';\n\nimport React, { useState } from 'react'\nimport '../CSS/searchbyaddressMaps.css'\n\nconst LOCATION_XML = \"https://nominatim.openstreetmap.org/search?\"\nconst params = {\n    q: '',\n    format: 'json',\n    addressdetails: 'addressdetails'\n}\n\n\nexport const Search = ({ selectedPlace, setSelectedPlace }) => {\n    //const [confirmAddress, setConfirmAddress] = useState()\n    const [searchText, setSearchText] = useState(\"\");\n    const [suggestedPlaces, setSuggestedPlaces] = useState([]);\n\n    return (\n        <>\n\n        <form>\n            <div className='maps-input-search-main-container'>\n        <input \n            className=\"maps-search-input\"\n            type=\"text\" \n            placeholder=\"Karobar's Address ...\"\n            value={searchText}\n            onChange={(e) => setSearchText(e.target.value)} >\n        </input>\n\n        <button\n            className='search-btn-maps'\n            onClick={async (e) => {\n                e.preventDefault();\n                const params = {\n                    q: searchText,\n                    format: 'json',\n                    addressdetails: 1,\n                    polygon_geojson: 0\n                };\n                const queryStr = new URLSearchParams(params).toString();\n                const reqOptions = {\n                    method: \"GET\",\n                    redirect: \"follow\"\n                };\n\n                const fetchURL = LOCATION_XML + queryStr\n\n                const response = await fetch(fetchURL, reqOptions);\n                const data = await response.text()\n               // console.log(JSON.parse(data))\n                setSuggestedPlaces(JSON.parse(data))\n\n            }}\n        >\n            <img style={{width:\"30px\"}} src='/search_icon.png'/>\n        </button>\n\n        <ul className='ul-searchbyaddress'>\n        {\n            suggestedPlaces.map((item) => {\n                return (\n                    <div key={item?.place_id}>\n                        <li style={{ cursor: 'pointer' }}\n                            onClick={() => {\n                                setSelectedPlace(item)\n                            }}>\n                            <img src=\"./location_icon.png\" style={{ width: \"20px\" , marginRight:\"15px\"}} />\n                            {item?.display_name}\n                        </li>\n                        <div style={{backgroundColor:\"white\", margin:\"10px 5px 10px 5px\", width:\"100%\",height:\"1px\"}}></div>\n                    </div>\n                )\n            })\n            \n        }\n        </ul>\n\n   \n        <input\n            className='text-submission'\n            value={selectedPlace?.display_name}\n            placeholder='Your chosen address will appear here...'\n            onChange={(e) => setSelectedPlace(e.target.value)}\n            disabled\n        ></input>\n        <button \n            className='submit-button-address-maps'\n            style={{ cursor: 'pointer'}}\n            onClick={(e) => {\n                e.preventDefault()\n                if(selectedPlace){\n                    const address = selectedPlace.display_name\n                    //console.log(address)\n                    localStorage.setItem('mapsAddress', address)\n                    window.close()\n                }\n                else{\n                    window.alert(\"No address selected.\")\n                }\n            }}\n        >\n        Confirm</button>\n\n        </div>\n        </form>\n\n\n\n\n        {/* <div>\n        <InputGroup className=\"mb-3 maps-search-input\">\n            <Form.Control\n                placeholder=\"Search text\"\n                value={searchText}\n                onChange={(e) => setSearchText(e.target.value)}\n                aria-describedby=\"basic-addon2\"\n            />\n            <Button\n                variant=\"primary\"\n                onClick={async () => {\n                    const params = {\n                        q: searchText,\n                        format: 'json',\n                        addressdetails: 1,\n                        polygon_geojson: 0\n                    };\n                    const queryStr = new URLSearchParams(params).toString();\n                    const reqOptions = {\n                        method: \"GET\",\n                        redirect: \"follow\"\n                    };\n\n                    const fetchURL = LOCATION_XML + queryStr\n\n                    const response = await fetch(fetchURL, reqOptions);\n                    const data = await response.text()\n                    console.log(JSON.parse(data))\n                    setSuggestedPlaces(JSON.parse(data))\n\n                }}\n            >Search\n            </Button>\n\n        </InputGroup>\n        <ListGroup className='ul-searchbyaddress'>\n            {\n                suggestedPlaces.map((item) => {\n                    return (\n                        <div key={item?.place_id}>\n                            <ListGroup.Item onClick={() => {\n                                setSelectedPlace(item)\n                            }}>\n                                <img src=\"./location_icon.png\" style={{ width: \"30px\" }} />\n                                {item?.display_name}\n                            </ListGroup.Item>\n                        </div>\n                    )\n                })\n            }\n        </ListGroup>\n        </div> */}\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}